<?php

/**
 * Implementation of hook_ctools_plugin_api().
 */
function uc_feeds_product_importer_ctools_plugin_api() {
  list($module, $api) = func_get_args();
  if ($module == "feeds" && $api == "feeds_importer_default") {
    return array("version" => 1);
  }
}

/**
 * Implementation of hook_feeds_importer_default().
 */
function uc_feeds_product_importer_feeds_importer_default() {
  $export = array();

  $feeds_importer = new stdClass;
  $feeds_importer->disabled = FALSE; /* Edit this to true to make a default feeds_importer disabled initially */
  $feeds_importer->api_version = 1;
  $feeds_importer->id = 'uc_feeds_product_importer';
  $feeds_importer->config = array(
    'name' => 'Ubercart Feeds Product Importer',
    'description' => 'Import Ubercart products from csv. Attempts to create all fields (including attributes) automatically.',
    'fetcher' => array(
      'plugin_key' => 'FeedsFileFetcher',
      'config' => array(
        'allowed_extensions' => 'txt csv tsv xml opml',
        'direct' => FALSE,
      ),
    ),
    'parser' => array(
      'plugin_key' => 'FeedsCSVParser',
      'config' => array(
        'delimiter' => ',',
        'no_headers' => 0,
      ),
    ),
    'processor' => array(
      'plugin_key' => 'FeedsNodeProcessor',
      'config' => array(
        'content_type' => 'product',
        'expire' => '-1',
        'author' => '1',
        'mappings' => array(
          0 => array(
            'source' => 'Product Name',
            'target' => 'title',
            'unique' => FALSE,
          ),
        ),
        'update_existing' => '0',
        'input_format' => 'full_html',
      ),
    ),
    'content_type' => '',
    'update' => 0,
    'import_period' => '-1',
    'expire_period' => 3600,
    'import_on_create' => 1,
    'process_in_background' => 0,
  );

  // Add standard fields
  $fields = field_info_instances('node', 'product');
  foreach($fields as $field) {
    $feeds_importer->config['processor']['config']['mappings'][] = array(
      'source' => $field['label'],
      'target' => $field['field_name'],
      'unique' => FALSE,
    );
  }
  
  // Add 'extra' fields
  $extra_fields = field_info_extra_fields('node', 'product', 'display');
  // remove fields we cannot import
  unset($extra_fields['display_price']);
  unset($extra_fields['add_to_cart']);
  foreach($extra_fields as $key => $extra) {
    $feeds_importer->config['processor']['config']['mappings'][] = array(
      'source' => $extra['label'],
      'target' => $key,
      'unique' => FALSE,
    );
  }
  
  // Add Attribute fields
  if (module_exists("uc_attribute")) {
    $attribute_fields = array('price', 'cost', 'weight');
    $attributes = uc_attribute_load_multiple();
    ksort($attributes);

    foreach ($attribute_fields as $attribute_field) {
      foreach($attributes as $aid => $attribute) {
        $options = $attribute->options;
        ksort($options);

        foreach($options as $oid => $option) {
          $a = preg_replace("/[^A-Za-z0-9]/",'', $attribute->name);
          $o = preg_replace("/[^A-Za-z0-9]/",'', $option->name);

          $feeds_importer->config['processor']['config']['mappings'][] = array(
            'source' => "$a-$o-" . ucfirst($attribute_field),
            'target' => 'attribute_' . $attribute_field . '_' . $aid . '_' .$oid,
            'unique' => FALSE,
          );
        }
      }
    }
  }

  $export['node'] = $feeds_importer;
  return $export;
}
?>